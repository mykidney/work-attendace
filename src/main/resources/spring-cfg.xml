<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd ">
    <!--开启切面编程自动代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--扫描注解生成bean-->
    <context:annotation-config/>
    <!--基本包扫描路径-->
    <context:component-scan base-package="com.coder520"/>

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/coder520/**/**.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.coder520.*.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--声明事务管理 采用注解方式-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource"
          destroy-method = "close" init-method="init">

        <property name="driverClassName" value="${jdbc_driver}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>

        <property name = "initialSize" value = "5"/>

        <property name = "maxActive" value = "20"/>

        <property name = "minIdle" value = "0"/>

        <property name = "maxWait" value = "60000"/>

        <property name = "validationQuery" value = "${validationQuery}"/>

        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name = "timeBetweenEvictionRunsMillis" value ="60000"/>
        <property name = "minEvictableIdleTimeMillis" value ="25200000"/>
        <property name = "removeAbandoned" value = "true"/>
        <property name = "removeAbandonedTimeout" value ="1800"/>
        <property name = "logAbandoned" value = "true"/>
        <property name="filters" value="mergeStat"/>
    </bean>
    <!--Activity流程引擎配置项-->
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <!-- 数据源  和系统同一个-->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置事务管理器，统一事务 -->
        <property name="transactionManager" ref="transactionManager" />
        <!-- 设置建表策略 更新数据库表 如果没有 则创建 -->
        <property name="databaseSchemaUpdate" value="true" />
        <!--是否启动jobExcutor 定时流程-->
        <property name="jobExecutorActivate" value="false"/>
        <property name="activityFontName" value="宋体"/>
        <property name="labelFontName" value="宋体"/>
        <!--自动部署流程-->
        <property name="deploymentResources">
            <list>
                <value>classpath*:workflow/*.bpmn</value>
            </list>
        </property>
    </bean>
<!--流程引擎-->
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
    <!--工作流数据存储服务-->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
    <!--工作流运行时服务-->
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    <!--工作流任务服务-->
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    <!--工作流历史数据服务-->
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <!--工作流管理服务-->
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
    <!--工作流身份识别服务-->
    <bean id="IdentityService" factory-bean="processEngine" factory-method="getIdentityService"/>


    <!--<import resource="spring-job.xml"/>-->
    <import resource="spring-shiro.xml"/>
</beans>